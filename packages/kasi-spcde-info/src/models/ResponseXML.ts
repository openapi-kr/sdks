/* tslint:disable */
/* eslint-disable */
/**
 * 한국천문연구원 특일 정보
 * (천문우주정보)국경일정보, 공휴일정보, 기념일정보, 24절기정보, 잡절정보를 조회하는 서비스 입니다.  활용시 날짜, 순번, 특일정보의 분류, 공공기관 휴일 여부, 명칭을 확인할 수 있습니다.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: sol0993@kasi.re.kr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ResponseBody } from './ResponseBody';
import {
    ResponseBodyFromJSON,
    ResponseBodyFromJSONTyped,
    ResponseBodyToJSON,
} from './ResponseBody';
import type { ResponseHeader } from './ResponseHeader';
import {
    ResponseHeaderFromJSON,
    ResponseHeaderFromJSONTyped,
    ResponseHeaderToJSON,
} from './ResponseHeader';

/**
 * 
 * @export
 * @interface ResponseXML
 */
export interface ResponseXML {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof ResponseXML
     */
    header: ResponseHeader;
    /**
     * 
     * @type {ResponseBody}
     * @memberof ResponseXML
     */
    body?: ResponseBody;
}

/**
 * Check if a given object implements the ResponseXML interface.
 */
export function instanceOfResponseXML(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "header" in value;

    return isInstance;
}

export function ResponseXMLFromJSON(json: any): ResponseXML {
    return ResponseXMLFromJSONTyped(json, false);
}

export function ResponseXMLFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseXML {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'header': ResponseHeaderFromJSON(json['header']),
        'body': !exists(json, 'body') ? undefined : ResponseBodyFromJSON(json['body']),
    };
}

export function ResponseXMLToJSON(value?: ResponseXML | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'header': ResponseHeaderToJSON(value.header),
        'body': ResponseBodyToJSON(value.body),
    };
}

