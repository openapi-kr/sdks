/* tslint:disable */
/* eslint-disable */
/**
 * 한국천문연구원 특일 정보
 * (천문우주정보)국경일정보, 공휴일정보, 기념일정보, 24절기정보, 잡절정보를 조회하는 서비스 입니다.  활용시 날짜, 순번, 특일정보의 분류, 공공기관 휴일 여부, 명칭을 확인할 수 있습니다.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: sol0993@kasi.re.kr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DateKind } from './DateKind';
import {
    DateKindFromJSON,
    DateKindFromJSONTyped,
    DateKindToJSON,
} from './DateKind';

/**
 * 
 * @export
 * @interface SpcdeInfo
 */
export interface SpcdeInfo {
    /**
     * 
     * @type {DateKind}
     * @memberof SpcdeInfo
     */
    dateKind: DateKind;
    /**
     * 명칭
     * @type {string}
     * @memberof SpcdeInfo
     */
    dateName: string;
    /**
     * 공휴일여부
     * @type {string}
     * @memberof SpcdeInfo
     */
    isHoliday: SpcdeInfoIsHolidayEnum;
    /**
     * 날짜
     * @type {number}
     * @memberof SpcdeInfo
     */
    locdate: number;
    /**
     * 순번
     * @type {number}
     * @memberof SpcdeInfo
     */
    seq: number;
}

/**
 * 공휴일여부
 */
export type SpcdeInfoIsHolidayEnum =
    'Y'|
    'N'

const SpcdeInfoIsHolidayEnumValues = [
    'Y',
    'N',
]

export function isSpcdeInfoIsHolidayEnum(value: any): value is SpcdeInfoIsHolidayEnum {
    return SpcdeInfoIsHolidayEnumValues.indexOf(value as unknown as SpcdeInfoIsHolidayEnum) !== -1
}



/**
 * Check if a given object implements the SpcdeInfo interface.
 */
export function instanceOfSpcdeInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "dateKind" in value;
    isInstance = isInstance && "dateName" in value;
    isInstance = isInstance && "isHoliday" in value;
    isInstance = isInstance && "locdate" in value;
    isInstance = isInstance && "seq" in value;

    return isInstance;
}

export function SpcdeInfoFromJSON(json: any): SpcdeInfo {
    return SpcdeInfoFromJSONTyped(json, false);
}

export function SpcdeInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpcdeInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!exists(json, 'isHoliday')) {
        return json;
    }
    if (
        !isSpcdeInfoIsHolidayEnum(json['isHoliday'])
        && json['isHoliday'] !== undefined
    ) {
        return json;
    }
    return {
        
        'dateKind': DateKindFromJSON(json['dateKind']),
        'dateName': json['dateName'],
        'isHoliday': json['isHoliday'],
        'locdate': json['locdate'],
        'seq': json['seq'],
    };
}

export function SpcdeInfoToJSON(value?: SpcdeInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dateKind': DateKindToJSON(value.dateKind),
        'dateName': value.dateName,
        'isHoliday': value.isHoliday,
        'locdate': value.locdate,
        'seq': value.seq,
    };
}

