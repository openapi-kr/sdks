/* tslint:disable */
/* eslint-disable */
/**
 * 한국수출입은행 오픈 API
 * 한국수출입은행이 보유한 공공데이터를 제공받아 누구나 직접 응용프로그램과 서비스개발 등에 활용할 수 있습니다.
 *
 * The version of the OpenAPI document: 2022.08.10
 * Contact: h.lee@koreaexim.go.kr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InternationalSuccessItem } from './InternationalSuccessItem';
import {
    InternationalSuccessItemFromJSON,
    InternationalSuccessItemFromJSONTyped,
    InternationalSuccessItemToJSON,
} from './InternationalSuccessItem';

/**
 * 
 * @export
 * @interface InternationalSuccess
 */
export interface InternationalSuccess {
    /**
     * 조회 결과
     * @type {number}
     * @memberof InternationalSuccess
     */
    result: InternationalSuccessResultEnum;
    /**
     * 
     * @type {Array<InternationalSuccessItem>}
     * @memberof InternationalSuccess
     */
    sofrList: Array<InternationalSuccessItem>;
    /**
     * 
     * @type {Array<InternationalSuccessItem>}
     * @memberof InternationalSuccess
     */
    estrList: Array<InternationalSuccessItem>;
    /**
     * 
     * @type {Array<InternationalSuccessItem>}
     * @memberof InternationalSuccess
     */
    euriborList: Array<InternationalSuccessItem>;
    /**
     * 
     * @type {Array<InternationalSuccessItem>}
     * @memberof InternationalSuccess
     */
    tonaList: Array<InternationalSuccessItem>;
    /**
     * 
     * @type {Array<InternationalSuccessItem>}
     * @memberof InternationalSuccess
     */
    tiborList: Array<InternationalSuccessItem>;
    /**
     * 
     * @type {Array<InternationalSuccessItem>}
     * @memberof InternationalSuccess
     */
    swapRfrList: Array<InternationalSuccessItem>;
    /**
     * 
     * @type {Array<InternationalSuccessItem>}
     * @memberof InternationalSuccess
     */
    liborList: Array<InternationalSuccessItem>;
    /**
     * 
     * @type {Array<InternationalSuccessItem>}
     * @memberof InternationalSuccess
     */
    swapList: Array<InternationalSuccessItem>;
    /**
     * 
     * @type {Array<InternationalSuccessItem>}
     * @memberof InternationalSuccess
     */
    cirrList: Array<InternationalSuccessItem>;
}

/**
 * 조회 결과
 */
export type InternationalSuccessResultEnum =
    1

const InternationalSuccessResultEnumValues = [
    1,
]

export function isInternationalSuccessResultEnum(value: any): value is InternationalSuccessResultEnum {
    return InternationalSuccessResultEnumValues.indexOf(value as unknown as InternationalSuccessResultEnum) !== -1
}



/**
 * Check if a given object implements the InternationalSuccess interface.
 */
export function instanceOfInternationalSuccess(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "result" in value;
    isInstance = isInstance && "sofrList" in value;
    isInstance = isInstance && "estrList" in value;
    isInstance = isInstance && "euriborList" in value;
    isInstance = isInstance && "tonaList" in value;
    isInstance = isInstance && "tiborList" in value;
    isInstance = isInstance && "swapRfrList" in value;
    isInstance = isInstance && "liborList" in value;
    isInstance = isInstance && "swapList" in value;
    isInstance = isInstance && "cirrList" in value;

    return isInstance;
}

export function InternationalSuccessFromJSON(json: any): InternationalSuccess {
    return InternationalSuccessFromJSONTyped(json, false);
}

export function InternationalSuccessFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternationalSuccess {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!exists(json, 'result')) {
        return json;
    }
    if (
        !isInternationalSuccessResultEnum(json['result'])
        && json['result'] !== undefined
    ) {
        return json;
    }
    return {
        
        'result': json['result'],
        'sofrList': ((json['sofr_list'] as Array<any>).map(InternationalSuccessItemFromJSON)),
        'estrList': ((json['estr_list'] as Array<any>).map(InternationalSuccessItemFromJSON)),
        'euriborList': ((json['euribor_list'] as Array<any>).map(InternationalSuccessItemFromJSON)),
        'tonaList': ((json['tona_list'] as Array<any>).map(InternationalSuccessItemFromJSON)),
        'tiborList': ((json['tibor_list'] as Array<any>).map(InternationalSuccessItemFromJSON)),
        'swapRfrList': ((json['swapRfr_list'] as Array<any>).map(InternationalSuccessItemFromJSON)),
        'liborList': ((json['libor_list'] as Array<any>).map(InternationalSuccessItemFromJSON)),
        'swapList': ((json['swap_list'] as Array<any>).map(InternationalSuccessItemFromJSON)),
        'cirrList': ((json['cirr_list'] as Array<any>).map(InternationalSuccessItemFromJSON)),
    };
}

export function InternationalSuccessToJSON(value?: InternationalSuccess | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'result': value.result,
        'sofr_list': ((value.sofrList as Array<any>).map(InternationalSuccessItemToJSON)),
        'estr_list': ((value.estrList as Array<any>).map(InternationalSuccessItemToJSON)),
        'euribor_list': ((value.euriborList as Array<any>).map(InternationalSuccessItemToJSON)),
        'tona_list': ((value.tonaList as Array<any>).map(InternationalSuccessItemToJSON)),
        'tibor_list': ((value.tiborList as Array<any>).map(InternationalSuccessItemToJSON)),
        'swapRfr_list': ((value.swapRfrList as Array<any>).map(InternationalSuccessItemToJSON)),
        'libor_list': ((value.liborList as Array<any>).map(InternationalSuccessItemToJSON)),
        'swap_list': ((value.swapList as Array<any>).map(InternationalSuccessItemToJSON)),
        'cirr_list': ((value.cirrList as Array<any>).map(InternationalSuccessItemToJSON)),
    };
}

