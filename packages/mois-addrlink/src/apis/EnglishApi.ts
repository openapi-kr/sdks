/* tslint:disable */
/* eslint-disable */
/**
 * 주소기반산업서비스
 * 행정안전부  [주소기반산업서비스](https://business.juso.go.kr/addrlink/main.do) 에서 제공하는 도로명주소 Open API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AddrEngResponse,
  AddrEngResults,
} from '../models';
import {
    AddrEngResponseFromJSON,
    AddrEngResponseToJSON,
    AddrEngResultsFromJSON,
    AddrEngResultsToJSON,
} from '../models';

export interface AddrEngApiGetRequest {
    /**
     * 주소 검색어
     */
    keyword: string;
    /**
     * 현재 페이지 번호
     */
    currentPage?: number;
    /**
     * 페이지당 출력할 결과 Row 수
     */
    countPerPage?: number;
    /**
     * 검색결과형식 설정
     */
    resultType?: AddrEngApiGetResultTypeEnum;
}

export interface AddrEngApiPostRequest {
    /**
     * 주소 검색어
     */
    keyword: string;
    /**
     * 현재 페이지 번호
     */
    currentPage?: number;
    /**
     * 페이지당 출력할 결과 Row 수
     */
    countPerPage?: number;
    /**
     * 검색결과형식 설정
     */
    resultType?: AddrEngApiPostResultTypeEnum;
}

/**
 * 
 */
export class EnglishApi extends runtime.BaseAPI {

    /**
     * 영문주소 검색
     * 
     */
    async addrEngApiGetRaw(requestParameters: AddrEngApiGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AddrEngResponse>> {
        if (requestParameters.keyword === null || requestParameters.keyword === undefined) {
            throw new runtime.RequiredError('keyword','Required parameter requestParameters.keyword was null or undefined when calling addrEngApiGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.keyword !== undefined) {
            queryParameters['keyword'] = requestParameters.keyword;
        }

        if (requestParameters.currentPage !== undefined) {
            queryParameters['currentPage'] = requestParameters.currentPage;
        }

        if (requestParameters.countPerPage !== undefined) {
            queryParameters['countPerPage'] = requestParameters.countPerPage;
        }

        if (requestParameters.resultType !== undefined) {
            queryParameters['resultType'] = requestParameters.resultType;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["confmKey"] = this.configuration.apiKey("confmKey"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/addrlink/addrEngApi.do`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AddrEngResponseFromJSON(jsonValue));
    }

    /**
     * 영문주소 검색
     * 
     */
    async addrEngApiGet(requestParameters: AddrEngApiGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AddrEngResponse> {
        const response = await this.addrEngApiGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 영문주소 검색
     * 
     */
    async addrEngApiPostRaw(requestParameters: AddrEngApiPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AddrEngResponse>> {
        if (requestParameters.keyword === null || requestParameters.keyword === undefined) {
            throw new runtime.RequiredError('keyword','Required parameter requestParameters.keyword was null or undefined when calling addrEngApiPost.');
        }

        const queryParameters: any = {};

        if (requestParameters.keyword !== undefined) {
            queryParameters['keyword'] = requestParameters.keyword;
        }

        if (requestParameters.currentPage !== undefined) {
            queryParameters['currentPage'] = requestParameters.currentPage;
        }

        if (requestParameters.countPerPage !== undefined) {
            queryParameters['countPerPage'] = requestParameters.countPerPage;
        }

        if (requestParameters.resultType !== undefined) {
            queryParameters['resultType'] = requestParameters.resultType;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["confmKey"] = this.configuration.apiKey("confmKey"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/addrlink/addrEngApi.do`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AddrEngResponseFromJSON(jsonValue));
    }

    /**
     * 영문주소 검색
     * 
     */
    async addrEngApiPost(requestParameters: AddrEngApiPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AddrEngResponse> {
        const response = await this.addrEngApiPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const AddrEngApiGetResultTypeEnum = {
    Xml: 'xml',
    Json: 'json'
} as const;
export type AddrEngApiGetResultTypeEnum = typeof AddrEngApiGetResultTypeEnum[keyof typeof AddrEngApiGetResultTypeEnum];
/**
 * @export
 */
export const AddrEngApiPostResultTypeEnum = {
    Xml: 'xml',
    Json: 'json'
} as const;
export type AddrEngApiPostResultTypeEnum = typeof AddrEngApiPostResultTypeEnum[keyof typeof AddrEngApiPostResultTypeEnum];
