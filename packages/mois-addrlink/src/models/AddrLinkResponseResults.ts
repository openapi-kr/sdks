/* tslint:disable */
/* eslint-disable */
/**
 * 주소기반산업서비스
 * 행정안전부  [주소기반산업서비스](https://business.juso.go.kr/addrlink/main.do) 에서 제공하는 도로명주소 Open API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
} from './Address';
import type { Common } from './Common';
import {
    CommonFromJSON,
    CommonFromJSONTyped,
    CommonToJSON,
} from './Common';

/**
 * 
 * @export
 * @interface AddrLinkResponseResults
 */
export interface AddrLinkResponseResults {
    /**
     * 
     * @type {Common}
     * @memberof AddrLinkResponseResults
     */
    common: Common;
    /**
     * 
     * @type {Array<Address>}
     * @memberof AddrLinkResponseResults
     */
    juso: Array<Address> | null;
}

/**
 * Check if a given object implements the AddrLinkResponseResults interface.
 */
export function instanceOfAddrLinkResponseResults(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "common" in value;
    isInstance = isInstance && "juso" in value;

    return isInstance;
}

export function AddrLinkResponseResultsFromJSON(json: any): AddrLinkResponseResults {
    return AddrLinkResponseResultsFromJSONTyped(json, false);
}

export function AddrLinkResponseResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddrLinkResponseResults {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'common': CommonFromJSON(json['common']),
        'juso': (json['juso'] === null ? null : (json['juso'] as Array<any>).map(AddressFromJSON)),
    };
}

export function AddrLinkResponseResultsToJSON(value?: AddrLinkResponseResults | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'common': CommonToJSON(value.common),
        'juso': (value.juso === null ? null : (value.juso as Array<any>).map(AddressToJSON)),
    };
}

