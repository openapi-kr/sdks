/* tslint:disable */
/* eslint-disable */
/**
 * 공동주택가격정보서비스
 * 공동주택에 대해 매년 공시기준일(1월1일)에 공시한 공동주택 가격정보의 지리데이터에서 생성된 맵 이미지와 도형 및 속성 값을 포함한 피처 집합을 제공하는 공동주택가격정보서비스
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApartHousingPriceAttr
 */
export interface ApartHousingPriceAttr {
    /**
     * 고유번호
     * 
     * 각 필지를 서로 구별하기 위하여 필지마다 붙이는 고유한 번호
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    pnu: string;
    /**
     * 법정동코드
     * 
     * 토지가 소재한 행정구역코드(법정동코드) 10자리
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    ldCode?: string;
    /**
     * 법정동명
     * 
     * 토지가 소재한 소재지의 행정구역 명칭(법정동명)
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    ldCodeNm?: string;
    /**
     * 특수지구분코드
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    regstrSeCode?: string;
    /**
     * 특수지구분명
     * 
     * 토지가 위치한 토지의 대장 구분 (토지(임야)대장구분)
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    regstrSeCodeNm?: string;
    /**
     * 지번
     * 
     * 필지에 부여하여 지적공부에 등록한 번호
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    mnnmSlno?: string;
    /**
     * 기준년도
     * 
     * 공동주택가격의 기준년도
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    stdrYear: string;
    /**
     * 기준월
     * 
     * 공동주택가격의 기준월
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    stdrMt: string;
    /**
     * 공동주택코드
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    aphusCode?: string;
    /**
     * 공동주택구분코드
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    aphusSeCode?: string;
    /**
     * 공동주택구분명
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    aphusSeCodeNm?: string;
    /**
     * 특수지명
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    spclLandNm?: string;
    /**
     * 공동주택명
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    aphusNm?: string;
    /**
     * 동명
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    dongNm?: string;
    /**
     * 층명
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    floorNm?: string;
    /**
     * 호명
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    hoNm?: string;
    /**
     * 전용면적(㎡)
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    prvuseAr?: string;
    /**
     * 공시가격(원)
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    pblntfPc?: string;
    /**
     * 데이터기준일자
     * @type {string}
     * @memberof ApartHousingPriceAttr
     */
    lastUpdtDt?: string;
}

/**
 * Check if a given object implements the ApartHousingPriceAttr interface.
 */
export function instanceOfApartHousingPriceAttr(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pnu" in value;
    isInstance = isInstance && "stdrYear" in value;
    isInstance = isInstance && "stdrMt" in value;

    return isInstance;
}

export function ApartHousingPriceAttrFromJSON(json: any): ApartHousingPriceAttr {
    return ApartHousingPriceAttrFromJSONTyped(json, false);
}

export function ApartHousingPriceAttrFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApartHousingPriceAttr {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pnu': json['pnu'],
        'ldCode': !exists(json, 'ldCode') ? undefined : json['ldCode'],
        'ldCodeNm': !exists(json, 'ldCodeNm') ? undefined : json['ldCodeNm'],
        'regstrSeCode': !exists(json, 'regstrSeCode') ? undefined : json['regstrSeCode'],
        'regstrSeCodeNm': !exists(json, 'regstrSeCodeNm') ? undefined : json['regstrSeCodeNm'],
        'mnnmSlno': !exists(json, 'mnnmSlno') ? undefined : json['mnnmSlno'],
        'stdrYear': json['stdrYear'],
        'stdrMt': json['stdrMt'],
        'aphusCode': !exists(json, 'aphusCode') ? undefined : json['aphusCode'],
        'aphusSeCode': !exists(json, 'aphusSeCode') ? undefined : json['aphusSeCode'],
        'aphusSeCodeNm': !exists(json, 'aphusSeCodeNm') ? undefined : json['aphusSeCodeNm'],
        'spclLandNm': !exists(json, 'spclLandNm') ? undefined : json['spclLandNm'],
        'aphusNm': !exists(json, 'aphusNm') ? undefined : json['aphusNm'],
        'dongNm': !exists(json, 'dongNm') ? undefined : json['dongNm'],
        'floorNm': !exists(json, 'floorNm') ? undefined : json['floorNm'],
        'hoNm': !exists(json, 'hoNm') ? undefined : json['hoNm'],
        'prvuseAr': !exists(json, 'prvuseAr') ? undefined : json['prvuseAr'],
        'pblntfPc': !exists(json, 'pblntfPc') ? undefined : json['pblntfPc'],
        'lastUpdtDt': !exists(json, 'lastUpdtDt') ? undefined : json['lastUpdtDt'],
    };
}

export function ApartHousingPriceAttrToJSON(value?: ApartHousingPriceAttr | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pnu': value.pnu,
        'ldCode': value.ldCode,
        'ldCodeNm': value.ldCodeNm,
        'regstrSeCode': value.regstrSeCode,
        'regstrSeCodeNm': value.regstrSeCodeNm,
        'mnnmSlno': value.mnnmSlno,
        'stdrYear': value.stdrYear,
        'stdrMt': value.stdrMt,
        'aphusCode': value.aphusCode,
        'aphusSeCode': value.aphusSeCode,
        'aphusSeCodeNm': value.aphusSeCodeNm,
        'spclLandNm': value.spclLandNm,
        'aphusNm': value.aphusNm,
        'dongNm': value.dongNm,
        'floorNm': value.floorNm,
        'hoNm': value.hoNm,
        'prvuseAr': value.prvuseAr,
        'pblntfPc': value.pblntfPc,
        'lastUpdtDt': value.lastUpdtDt,
    };
}

