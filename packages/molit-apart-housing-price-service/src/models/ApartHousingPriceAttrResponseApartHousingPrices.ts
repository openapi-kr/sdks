/* tslint:disable */
/* eslint-disable */
/**
 * 공동주택가격정보서비스
 * 공동주택에 대해 매년 공시기준일(1월1일)에 공시한 공동주택 가격정보의 지리데이터에서 생성된 맵 이미지와 도형 및 속성 값을 포함한 피처 집합을 제공하는 공동주택가격정보서비스
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApartHousingPriceAttr } from './ApartHousingPriceAttr';
import {
    ApartHousingPriceAttrFromJSON,
    ApartHousingPriceAttrFromJSONTyped,
    ApartHousingPriceAttrToJSON,
} from './ApartHousingPriceAttr';

/**
 * 
 * @export
 * @interface ApartHousingPriceAttrResponseApartHousingPrices
 */
export interface ApartHousingPriceAttrResponseApartHousingPrices {
    /**
     * 결과코드
     * @type {string}
     * @memberof ApartHousingPriceAttrResponseApartHousingPrices
     */
    resultCode: string | null;
    /**
     * 결과메시지
     * @type {string}
     * @memberof ApartHousingPriceAttrResponseApartHousingPrices
     */
    resultMsg: string | null;
    /**
     * 한 페이지 결과 수
     * @type {string}
     * @memberof ApartHousingPriceAttrResponseApartHousingPrices
     */
    numOfRows: string;
    /**
     * 페이지 번호
     * @type {string}
     * @memberof ApartHousingPriceAttrResponseApartHousingPrices
     */
    pageNo: string;
    /**
     * 전체 결과 수
     * @type {string}
     * @memberof ApartHousingPriceAttrResponseApartHousingPrices
     */
    totalCount: string;
    /**
     * 
     * @type {Array<ApartHousingPriceAttr>}
     * @memberof ApartHousingPriceAttrResponseApartHousingPrices
     */
    field: Array<ApartHousingPriceAttr>;
}

/**
 * Check if a given object implements the ApartHousingPriceAttrResponseApartHousingPrices interface.
 */
export function instanceOfApartHousingPriceAttrResponseApartHousingPrices(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "resultCode" in value;
    isInstance = isInstance && "resultMsg" in value;
    isInstance = isInstance && "numOfRows" in value;
    isInstance = isInstance && "pageNo" in value;
    isInstance = isInstance && "totalCount" in value;
    isInstance = isInstance && "field" in value;

    return isInstance;
}

export function ApartHousingPriceAttrResponseApartHousingPricesFromJSON(json: any): ApartHousingPriceAttrResponseApartHousingPrices {
    return ApartHousingPriceAttrResponseApartHousingPricesFromJSONTyped(json, false);
}

export function ApartHousingPriceAttrResponseApartHousingPricesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApartHousingPriceAttrResponseApartHousingPrices {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resultCode': json['resultCode'],
        'resultMsg': json['resultMsg'],
        'numOfRows': json['numOfRows'],
        'pageNo': json['pageNo'],
        'totalCount': json['totalCount'],
        'field': ((json['field'] as Array<any>).map(ApartHousingPriceAttrFromJSON)),
    };
}

export function ApartHousingPriceAttrResponseApartHousingPricesToJSON(value?: ApartHousingPriceAttrResponseApartHousingPrices | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resultCode': value.resultCode,
        'resultMsg': value.resultMsg,
        'numOfRows': value.numOfRows,
        'pageNo': value.pageNo,
        'totalCount': value.totalCount,
        'field': ((value.field as Array<any>).map(ApartHousingPriceAttrToJSON)),
    };
}

